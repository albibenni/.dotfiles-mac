export XDG_CONFIG_HOME=$HOME/.config

PERSONAL=$XDG_CONFIG_HOME/personal
source $PERSONAL/env
for i in `find -L $PERSONAL`; do
    source $i
done
# source /usr/share/doc/fzf/examples/key-bindings.zsh
# source /usr/share/doc/fzf/examples/completion.zsh

"$HOME/.cargo/env"
export NRDP="$HOME/work/nrdp"
export NRDP_BUILDS="$HOME/work/builds"
export CC="clang-12"
export CXX="clang++-12"
export PYTHONBREAKPOINT="pudb.set_trace"
export GOPATH=$HOME/go
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
# export API_TOOLS=$HOME/work/tools/edge/scripts
export GIT_EDITOR=$VIM
export N_PREFIX="$HOME/.local/n"
export DOTFILES=$HOME/.dotfiles

addToPathFront $HOME/.zig
# addToPathFront $HOME/.local/.npm-global/bin
addToPathFront $HOME/.config/tmux/scripts
addToPathFront $HOME/.config/scripts
addToPathFront $HOME/.local/bin
# addToPathFront $HOME/.local/n/bin/
# addToPathFront $HOME/.local/go/bin
addToPathFront $HOME/go/bin

# Where should I put you?
bindkey -s ^f "tmux-sessionizer\n"
bindkey -s ^s "source ~/.zshrc\n"

# catr() {
#     tail -n "+$1" $3 | head -n "$(($2 - $1 + 1))"
# }
#
# validateYaml() {
#     python -c 'import yaml,sys;yaml.safe_load(sys.stdin)' < $1
# }
#
# goWork() {
#     cp ~/.npm_work_rc ~/.npmrc
# }
#
# goPersonal() {
#     cp ~/.npm_personal_rc ~/.npmrc
# }
#
# addThrottle() {
#     local kbs="kbps"
#     echo $kbs
#     echo "About to throttle to $1 $kbs"
#     echo "sudo tc qdisc add dev wlp59s0 handle 1: root htb default 11"
#     echo "sudo tc class add dev wlp59s0 parent 1: classid 1:1 htb rate $1$kbs"
#     echo "sudo tc class add dev wlp59s0 parent 1:1 classid 1:11 htb rate $1$kbs"
#     sudo tc qdisc add dev wlp59s0 handle 1: root htb default 11
#     sudo tc class add dev wlp59s0 parent 1: classid 1:1 htb rate $1$kbs
#     sudo tc class add dev wlp59s0 parent 1:1 classid 1:11 htb rate $1$kbs
# }
#
# removeThrottle() {
#     sudo tc qdisc del dev wlp59s0 root
# }
#
# cat1Line() {
#     cat $1 | tr -d "\n"
# }
#
# ioloop() {
#     FIFO=$(mktemp -u /tmp/ioloop_$$_XXXXXX ) &&
#     trap "rm -f $FIFO" EXIT &&
#     mkfifo $FIFO &&
#     ( : <$FIFO & ) &&    # avoid deadlock on opening pipe
#     exec >$FIFO <$FIFO
# }
#
# eslintify() {
#     cat $1 > /tmp/file_to_eslint
#     npx eslint
# }
export PATH="/opt/homebrew/opt/llvm@12/bin:$PATH"
export PATH="$PATH:/opt/nvim-linux64/bin"
